package database_test

import (
	"github.com/knightjdr/cmgo/internal/pkg/read/database"
	"github.com/knightjdr/cmgo/pkg/fs"
	. "github.com/onsi/ginkgo"
	. "github.com/onsi/gomega"
	"github.com/spf13/afero"
)

var databaseText = `>NP_001263222.1|gn|NISCH:11188| nischarin isoform 2 [Homo sapiens]
MATARTFGPEREAEPAKEARVVGSELVDTYTVYIIQVTDGSHEWTVKHRYSDFHDLHEKLVAERKIDKNL
LPPKKIIGKNSRSLVEKREKDLEVYLQKLLAAFPGVTPRVLAHFLHFHFYEINGITAALAEELFEKGEQL
LGAGEVFAIGPLQLYAVTEQLQQGKPTCASGDAKTDLGHILDFTCRLKYLKVSGTEGPFGTSNIQEQLLP
FDLSIFKSLHQVEISHCDAKHIRGLVASKPTLATLSVRFSATSMKEVLVPEASEFDEWEPEGTTLEGPVT
AVIPTWQALTTLDLSHNSISEIDESVKLIPKIEFLDLSHNGLLVVDNLQHLYNLVHLDLSYNKLSSLEGL
HTKLGNIKTLNLAGNLLESLSGLHKLYSLVNLDLRDNRIEQMEEVRSIGSLPCLEHVSLLNNPLSIIPDY
RTKVLAQFGERASEVCLDDTVTTEKELDTVEVLKAIQKAKEVKSKLSNPEKKGGEDSRLSAAPCIRPSSS
PPTVAPASASLPQPILSNQGNRVCILLLVEPHSPAWAPWLGWGWGRGASTCFQQGQTQGGQCLLQAGPRG
GTHGRGAWPDASCCLLGEDSQLL
>NP_001263218.1|gn|PRKAR1A:5573| cAMP-dependent protein kinase type I-alpha regulatory subunit isoform a [Homo sapiens]
MESGSTAASEEARSLRECELYVQKHNIQALLKDSIVQLCTARPERPMAFLREYFERLEKEEAKQIQNLQK
AGTRTDSREDEISPPPPNPVVKGRRRRGAISAEVYTEEDAASYVRKVIPKDYKTMAALAKAIEKNVLFSH
LDDNERSDIFDAMFSVSFIAGETVIQQGDEGDNFYVIDQGETDVYVNNEWATSVGEGGSFGELALIYGTP
RAATVKAKTNVKLWGIDRDSYRRILMGSTLRKRKMYEEFLSKVSILESLDKWERLTVADALEPVQFEDGQ
KIVVQGEPGDEFFIILEGSAAVLQRRSENEEFVEVGRLGPSDYFGEIALLMNRPRAATVVARGPLKCVKL
DRPRFERVLGPCSDILKRNIQQYNSFVSLSV
`

var _ = Describe("Read", func() {
	It("should read fasta database including sequences", func() {
		oldFs := fs.Instance
		defer func() { fs.Instance = oldFs }()
		fs.Instance = afero.NewMemMapFs()

		// Create test directory and files.
		fs.Instance.MkdirAll("test", 0755)
		afero.WriteFile(
			fs.Instance,
			"test/saint.txt",
			[]byte(databaseText),
			0444,
		)
		expected := []database.Fasta{
			{
				Entrez: "11188",
				Refseq: "NP_001263222.1",
				Sequence: "MATARTFGPEREAEPAKEARVVGSELVDTYTVYIIQVTDGSHEWTVKHRYSDFHDLHEKLVAERKIDKNL" +
					"LPPKKIIGKNSRSLVEKREKDLEVYLQKLLAAFPGVTPRVLAHFLHFHFYEINGITAALAEELFEKGEQL" +
					"LGAGEVFAIGPLQLYAVTEQLQQGKPTCASGDAKTDLGHILDFTCRLKYLKVSGTEGPFGTSNIQEQLLP" +
					"FDLSIFKSLHQVEISHCDAKHIRGLVASKPTLATLSVRFSATSMKEVLVPEASEFDEWEPEGTTLEGPVT" +
					"AVIPTWQALTTLDLSHNSISEIDESVKLIPKIEFLDLSHNGLLVVDNLQHLYNLVHLDLSYNKLSSLEGL" +
					"HTKLGNIKTLNLAGNLLESLSGLHKLYSLVNLDLRDNRIEQMEEVRSIGSLPCLEHVSLLNNPLSIIPDY" +
					"RTKVLAQFGERASEVCLDDTVTTEKELDTVEVLKAIQKAKEVKSKLSNPEKKGGEDSRLSAAPCIRPSSS" +
					"PPTVAPASASLPQPILSNQGNRVCILLLVEPHSPAWAPWLGWGWGRGASTCFQQGQTQGGQCLLQAGPRG" +
					"GTHGRGAWPDASCCLLGEDSQLL",
				Symbol: "NISCH",
			},
			{
				Entrez: "5573",
				Refseq: "NP_001263218.1",
				Sequence: "MESGSTAASEEARSLRECELYVQKHNIQALLKDSIVQLCTARPERPMAFLREYFERLEKEEAKQIQNLQK" +
					"AGTRTDSREDEISPPPPNPVVKGRRRRGAISAEVYTEEDAASYVRKVIPKDYKTMAALAKAIEKNVLFSH" +
					"LDDNERSDIFDAMFSVSFIAGETVIQQGDEGDNFYVIDQGETDVYVNNEWATSVGEGGSFGELALIYGTP" +
					"RAATVKAKTNVKLWGIDRDSYRRILMGSTLRKRKMYEEFLSKVSILESLDKWERLTVADALEPVQFEDGQ" +
					"KIVVQGEPGDEFFIILEGSAAVLQRRSENEEFVEVGRLGPSDYFGEIALLMNRPRAATVVARGPLKCVKL" +
					"DRPRFERVLGPCSDILKRNIQQYNSFVSLSV",
				Symbol: "PRKAR1A",
			},
		}
		Expect(database.Read("test/saint.txt", true)).To(Equal(expected))
	})

	It("should read fasta database without sequences", func() {
		oldFs := fs.Instance
		defer func() { fs.Instance = oldFs }()
		fs.Instance = afero.NewMemMapFs()

		// Create test directory and files.
		fs.Instance.MkdirAll("test", 0755)
		afero.WriteFile(
			fs.Instance,
			"test/saint.txt",
			[]byte(databaseText),
			0444,
		)
		expected := []database.Fasta{
			{
				Entrez:   "11188",
				Refseq:   "NP_001263222.1",
				Sequence: "",
				Symbol:   "NISCH",
			},
			{
				Entrez:   "5573",
				Refseq:   "NP_001263218.1",
				Sequence: "",
				Symbol:   "PRKAR1A",
			},
		}
		Expect(database.Read("test/saint.txt", false)).To(Equal(expected))
	})
})
